'use client'

export interface LoadingAgentProps {
  /**
   * Size of the loading agent
   * @default 'md'
   */
  size?: 'sm' | 'md' | 'lg'
}

export function LoadingAgent({ size = 'md' }: LoadingAgentProps) {
  const pathLength = 1200

  // Size mappings for width and height
  const sizes = {
    sm: { width: 24, height: 24 },
    md: { width: 32, height: 32 },
    lg: { width: 48, height: 48 },
  }

  const { width, height } = sizes[size]

  return (
    <svg
      viewBox='0 0 360 360'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
      style={{ width, height }}
    >
      {/* Main flower logo path */}
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M303.542 165.938C303.52 141.147 297.983 126.287 284.984 105.354C277.823 93.825 273.848 90.1848 262.713 78.8073C252.05 67.912 221.848 53.1703 207.035 68.3401C192.053 87.2525 203.289 106.263 214.453 121.433C216.877 124.535 219.102 127.22 221.128 129.638C213.284 123.993 204.655 118.829 196.573 116.196C173.126 108.561 157.341 109.336 133.478 115.466C120.334 118.843 115.648 121.57 101.403 128.845C91.376 133.965 64.3655 160.521 74.0704 179.558C86.2222 199.121 108.755 194.901 126.594 188.769C132.278 186.629 136.879 184.64 140.917 182.971C133.768 188.42 126.951 194.6 122.333 201.002C107.863 221.061 103.719 236.392 102.144 261.103C101.277 274.713 102.408 280.037 104.889 295.905C108.373 312.221 123.41 341.106 144.419 337.709C164.98 333.12 169.651 309.288 169.363 290.337C169.216 287.004 169.013 283.994 168.804 281.236C171.504 288.374 174.781 295.233 178.695 300.639C193.2 320.672 206.423 329.372 229.313 338.514C238.815 342.308 247.307 344.112 263.084 346.644C284.346 349.102 311.568 342.903 314.848 321.767C316.342 297.47 295.757 288.859 277.74 283.278C275.57 282.674 273.532 282.141 271.61 281.657C278.629 281.221 285.505 280.209 291.368 278.288C314.802 270.61 327.119 260.656 342.84 241.595C351.5 231.097 353.697 226.121 360.967 211.818C368.026 194.205 372.411 164.306 353.429 154.639C331.109 146.26 316.399 162.722 305.551 178.224C303.7 181.04 302.089 183.622 300.632 186C302.382 179.112 303.548 172.177 303.542 165.938ZM224.211 183.41C221.448 181.172 219.85 179.063 217.341 177.15C212.254 185.567 203.934 193.919 195.455 199.488C191.669 201.973 189.189 203.398 186.134 205.573C192.466 212.927 198.062 223.207 200.732 233.113C201.957 237.665 202.194 239.518 203.39 243.259C213.203 238.576 225.442 237.03 236.302 237.572C240.143 237.765 242.93 238.581 246.136 238.703C244.14 228.231 244.155 217.679 248.352 206.592C249.516 203.521 251.936 199.427 252.907 196.652C243.273 194.88 232.611 190.21 224.211 183.41Z'
        stroke='white'
        strokeWidth='8'
        strokeLinecap='round'
        strokeLinejoin='round'
        fill='var(--bg-muted)'
        style={{
          strokeDasharray: pathLength,
          strokeDashoffset: pathLength,
          stroke: 'var(--primary)',
          animation: 'dash 1s linear forwards',
        }}
      />

      {/* Center star/pentagon shape - animated with delay */}
      <path
        d='M224.211 183.41C221.448 181.172 219.85 179.063 217.341 177.15C212.254 185.567 203.934 193.919 195.455 199.488C191.669 201.973 189.189 203.398 186.134 205.573C192.466 212.927 198.062 223.207 200.732 233.113C201.957 237.665 202.194 239.518 203.39 243.259C213.203 238.576 225.442 237.03 236.302 237.572C240.143 237.765 242.93 238.581 246.136 238.703C244.14 228.231 244.155 217.679 248.352 206.592C249.516 203.521 251.936 199.427 252.907 196.652C243.273 194.88 232.611 190.21 224.211 183.41Z'
        stroke='white'
        strokeWidth='8'
        strokeLinecap='round'
        strokeLinejoin='round'
        style={{
          //strokeDasharray: pathLength / 3,
          //strokeDashoffset: pathLength / 3,
          animation: 'dash 1s linear forwards',
          stroke: 'var(--primary)',
          animationDelay: '0.5s',
        }}
      />

      <style>
        {`
          @keyframes dash {
            to {
              stroke-dashoffset: 0;
            }
          }
        `}
      </style>
    </svg>
  )
}
